{"version":3,"sources":["logo.svg","component/Todo.js","component/Form.js","component/Button.js","input2.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","className","id","type","defaultChecked","completed","htmlFor","name","Form","useState","setName","onSubmit","e","preventDefault","addTask","autoComplete","value","onChange","target","FilterButton","aria-pressed","Myinput","state","handleChange","bind","handleSubmit","event","this","setState","document","getElementById","innerHTML","React","Component","App","tasks","setTasks","taskList","map","task","newTask","nanoid","role","aria-labelledby","href","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c8383614.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nexport default function Todo(props){\r\n    return(\r\n        <li className='todo-stack-small'>\r\n        <div className='c-cb'>\r\n            <input id={props.id} type='checkbox' defaultChecked={props.completed}/>\r\n            <label className='todo-label' htmlFor={props.id}>{props.name}</label>\r\n        </div>\r\n        <div className='btn-group'>\r\n            <button  type='button' className='btn'>\r\n                Edit<span className='visually-hidden'>Eat</span>\r\n            </button>\r\n            <button  type='button' className='btn btn-danger'>\r\n                Delete<span className='visually-hidden'>Eat</span>\r\n            </button>\r\n        </div>\r\n    </li>\r\n    )\r\n\r\n\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nfunction Form(props){\r\n  const [name, setName] = useState(\"\")\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n    return(\r\n        <from onSubmit={handleSubmit}>\r\n        <h2 className=\"lable-wrapper\">\r\n          <label htmlFor='new-todo-input' className='label__lg'>\r\n            What needs to be done?\r\n          </label>\r\n        </h2>\r\n        <input \r\n          type='text'\r\n          id=\"new-todo-input\"\r\n          className=\"input input__lg\"\r\n          name=\"text\"\r\n          autoComplete='off'\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n        <input type='submit' className='btn btn-primary btn-lg' value=\"Submit\" />Add\r\n      </from>\r\n    );\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nfunction FilterButton(){\r\n    return(\r\n        <button type='button' className='btn toggle-btn' aria-pressed=\"true\">\r\n        <span className='visually-hidden'>Show</span>\r\n        <span>All</span>\r\n        <span className='visually-hidden'>tasks</span>\r\n      </button>\r\n    );\r\n}\r\n\r\nexport default FilterButton","import React, { Component } from 'react';\r\n\r\nclass Myinput extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={name : ''};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);   \r\n        \r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({name : event.target.value});\r\n\r\n    }\r\n    handleSubmit(event){\r\n        document.getElementById('demo').innerHTML = \"The submitted name is \" + this.state.name;\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        User Name :\r\n                        <input type='text' value={this.state.name} onChange={this.handleChange} />\r\n                        <input type='submit' value=\"Submit\"/>\r\n                        <div id='demo'></div>\r\n                    </label>\r\n                </form>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Myinput","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport Todo from './component/Todo'\nimport Form from './component/Form'\nimport FilterButton from './component/Button';\nimport React, { useState } from 'react';\nimport { nanoid, nonoid } from \"nanoid\";\nimport Myinput from './input2';\n\n\n\nfunction App(props){\n\n  const [tasks, setTasks] = useState(props.tasks)\n\n  function addTask(name){\n    const newTask = {id : \"todo-\" + nanoid(), name: name, completed:false};\n    setTasks([...tasks, newTask])\n  }\n  const taskList = tasks.map(task => (\n    <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n      />\n    )\n  );\n\n \n  return(\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatics</h1>\n      <Form addTask={addTask}/>\n      <div className=\"filter btn-group stack-exception\">\n        <FilterButton/>\n        <FilterButton/>\n        <FilterButton/>\n      </div>\n      <h2 id=\"list-heading\">3 Tasks remaning</h2>\n      <ul role='list' className='todo-list stack-large stack-exception' aria-labelledby='list-heading'>\n        {taskList}\n        <li><a href=\"https://youtu.be/fG8nF53ceQc\" style={{color:'black'}}>Click me</a></li>\n      </ul>\n      <Myinput/>\n\n    </div>\n  )\n\n}\n\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  { id: 'todo-0', name : \"Eat\", completed :true},\n  { id: 'todo-1', name : \"Sleep\", completed :false},\n  { id: 'todo-2', name : \"Repeat\", completed :true}\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks ={DATA}/>\n  </React.StrictMode>,\n    document.getElementById('root')\n\n\n    \n  \n \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n\n\n\n"],"sourceRoot":""}